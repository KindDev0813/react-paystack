"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PayStack = function (_Component) {
  _inherits(PayStack, _Component);

  function PayStack(props) {
    _classCallCheck(this, PayStack);

    var _this = _possibleConstructorReturn(this, (PayStack.__proto__ || Object.getPrototypeOf(PayStack)).call(this, props));

    _this.payWithPaystack = _this.payWithPaystack.bind(_this);
    _this.loadScript = _this.loadScript.bind(_this);
    _this.state = {
      scriptLoaded: null,
      text: _this.props.text || "Make Payment",
      class: _this.props.class || _this.props.className || "",
      currency: _this.props.currency || "NGN",
      disabled: _this.props.disabled || false
    };
    return _this;
  }

  _createClass(PayStack, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      this.setState({
        scriptLoaded: new Promise(function (resolve) {
          _this2.loadScript(function () {
            resolve();
          });
        })
      }, function () {
        if (_this2.props.embed) {
          _this2.payWithPaystack();
        }
      });
    }
  }, {
    key: "loadScript",
    value: function loadScript(callback) {
      var script = document.createElement("script");
      script.src = "https://js.paystack.co/v1/inline.js";
      document.getElementsByTagName("head")[0].appendChild(script);
      if (script.readyState) {
        // IE
        script.onreadystatechange = function () {
          if (script.readyState === "loaded" || script.readyState === "complete") {
            script.onreadystatechange = null;
            callback();
          }
        };
      } else {
        // Others
        script.onload = function () {
          callback();
        };
      }
    }
  }, {
    key: "payWithPaystack",
    value: function payWithPaystack() {
      var _this3 = this;

      this.state.scriptLoaded && this.state.scriptLoaded.then(function () {
        var paystackOptions = {
          key: _this3.props.paystackkey,
          email: _this3.props.email,
          amount: _this3.props.amount,
          ref: _this3.props.reference,
          metadata: _this3.props.metadata || {},
          callback: function callback(response) {
            _this3.props.callback(response);
          },
          onClose: function onClose() {
            _this3.props.close();
          },
          currency: _this3.state.currency,
          plan: _this3.props.plan || "",
          quantity: _this3.props.quantity || "",
          subaccount: _this3.props.subaccount || "",
          transaction_charge: _this3.props.transaction_charge || 0,
          bearer: _this3.props.bearer || ""
        };
        if (_this3.props.embed) {
          paystackOptions.container = "paystackEmbedContainer";
        }
        var handler = window.PaystackPop.setup(paystackOptions);
        if (!_this3.props.embed) {
          handler.openIframe();
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var CustomTag = "" + this.props.tag;

      return this.props.embed ? _react2.default.createElement("div", { id: "paystackEmbedContainer" }) : _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement(
          CustomTag,
          {
            className: this.state.class,
            onClick: this.payWithPaystack,
            disabled: this.state.disabled
          },
          this.state.text
        )
      );
    }
  }]);

  return PayStack;
}(_react.Component);

PayStack.propTypes = {
  embed: _propTypes2.default.bool,
  text: _propTypes2.default.string,
  class: _propTypes2.default.string,
  metadata: _propTypes2.default.object,
  currency: _propTypes2.default.string,
  plan: _propTypes2.default.string,
  quantity: _propTypes2.default.string,
  subaccount: _propTypes2.default.string,
  transaction_charge: _propTypes2.default.number,
  bearer: _propTypes2.default.string,
  reference: _propTypes2.default.string.isRequired,
  email: _propTypes2.default.string.isRequired,
  amount: _propTypes2.default.number.isRequired, //in kobo
  paystackkey: _propTypes2.default.string.isRequired,
  callback: _propTypes2.default.func.isRequired,
  close: _propTypes2.default.func.isRequired,
  disabled: _propTypes2.default.bool,
  tag: _propTypes2.default.oneOf(['button', 'a', 'input'])
};

PayStack.defaultProps = {
  tag: 'button'
};

exports.default = PayStack;

//# sourceMappingURL=paystack.min.js.map