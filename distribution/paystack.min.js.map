{"version":3,"sources":["../src/PayStack.js"],"names":[],"mappings":"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","file":"paystack.min.js","sourcesContent":["import React, { Fragment,useEffect,useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nfunction PayStack(props) {\n  const psState = {\n    ...props,\n    scriptLoaded:null,\n    class: props.class || props.className || \"\"\n  }\n  const [payStackState,setPayStackState] = useState(psState);\n\n  useEffect(() => {\n       loadscriptAndUpdateState()\n      if(payStackState.scriptLoaded){\n        payWithPaystack()\n      }\n  },[payStackState,loadscriptAndUpdateState,payWithPaystack])\n\n  const payWithPaystack = () => {\n    payStackState.scriptLoaded &&\n    payStackState.scriptLoaded.then(() => {\n        let paystackOptions = {\n          key: payStackState.paystackkey,\n          email: payStackState.email,\n          amount: payStackState.amount,\n          ref: payStackState.reference,\n          metadata: payStackState.metadata || {},\n          callback: response => {\n            payStackState.callback(response);\n          },\n          onClose: () => {\n            payStackState.close();\n          },\n          currency: payStackState.currency,\n          plan: payStackState.plan || \"\",\n          quantity: payStackState.quantity || \"\",\n          subaccount: payStackState.subaccount || \"\",\n          transaction_charge: payStackState.transaction_charge || 0,\n          bearer: payStackState.bearer || \"\",\n        };\n        if (payStackState.embed) {\n          paystackOptions.container = \"paystackEmbedContainer\";\n        }\n        const handler = window.PaystackPop.setup(paystackOptions);\n        if (!payStackState.embed) {\n          handler.openIframe();\n        }\n      });\n  }\n\n  const loadScript = (callback) => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://js.paystack.co/v1/inline.js\";\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n    if (script.readyState) {\n      // IE\n      script.onreadystatechange = () => {\n        if (\n          script.readyState === \"loaded\" ||\n          script.readyState === \"complete\"\n        ) {\n          script.onreadystatechange = null;\n          callback();\n        }\n      };\n    } else {\n      // Others\n      script.onload = () => {\n        callback();\n      };\n    }\n  }\n\n  const loadscriptAndUpdateState = () => {\n    setPayStackState(\n      {...payStackState,\n        scriptLoaded: new Promise(resolve => {\n          loadScript(() => {\n            resolve();\n          });\n        })\n      },\n      () => {\n        if (props.embed) {\n          payWithPaystack();\n        }\n      }\n    );\n  }\n    const CustomTag = `${props.tag}`;\n    return props.embed ? (\n      <div id=\"paystackEmbedContainer\" />\n    ) : (\n      <Fragment>\n        <CustomTag\n          className={payStackState.class}\n          onClick={payWithPaystack}\n          disabled={payStackState.disabled}\n        >\n          {payStackState.text}\n        </CustomTag>\n      </Fragment>\n    );\n}\n\nPayStack.propTypes = {\n  embed: PropTypes.bool,\n  text: PropTypes.string,\n  class: PropTypes.string,\n  metadata: PropTypes.object,\n  currency: PropTypes.string,\n  plan: PropTypes.string,\n  quantity: PropTypes.string,\n  subaccount: PropTypes.string,\n  transaction_charge: PropTypes.number,\n  bearer: PropTypes.string,\n  reference: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired, //in kobo\n  paystackkey: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n  close: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  tag: PropTypes.oneOf(['button', 'a', 'input']),\n};\n\nPayStack.defaultProps = {\n  tag: 'button',\n  text: \"Make Payment\",\n  currency: \"NGN\",\n  disabled: false\n};\n\nexport default PayStack;\n"]}